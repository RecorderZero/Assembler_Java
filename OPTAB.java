//should distinguish assembler directive

import java.util.HashMap;
import java.util.Map;

public class OPTAB 
{
	private static Map<String,Integer> OPtoCODE = new HashMap<String,Integer>();
	private static Map<String,Integer> OPtoFORMAT = new HashMap<String,Integer>();
	public static void generlizeCODE()
	{
		OPtoCODE.put("ADD",0x18);
		OPtoCODE.put("+ADD",0x18);
		OPtoCODE.put("ADDF",0x58);
		OPtoCODE.put("+ADDF",0x58);
		OPtoCODE.put("ADDR",0x90);
		OPtoCODE.put("AND",0x40);
		OPtoCODE.put("+AND",0x40);
		OPtoCODE.put("CLEAR",0xB4);
		OPtoCODE.put("COMP",0x28);
		OPtoCODE.put("+COMP",0x28);
		OPtoCODE.put("COMPF",0x88);
		OPtoCODE.put("+COMPF",0x88);
		OPtoCODE.put("COMPR",0xA0);
		OPtoCODE.put("DIV",0x24);
		OPtoCODE.put("+DIV",0x24);
		OPtoCODE.put("DIVF",0x64);
		OPtoCODE.put("+DIVF",0x64);
		OPtoCODE.put("DIVR",0x9C);
		OPtoCODE.put("FIX",0xC4);
		OPtoCODE.put("FLOAT",0xC0);
		OPtoCODE.put("HIO",0xF4);
		OPtoCODE.put("J",0x3C);
		OPtoCODE.put("+J",0x3C);
		OPtoCODE.put("JEQ",0x30);
		OPtoCODE.put("+JEQ",0x30);
		OPtoCODE.put("JGT",0x34);
		OPtoCODE.put("+JGT",0x34);
		OPtoCODE.put("JLT",0x38);
		OPtoCODE.put("+JLT",0x38);
		OPtoCODE.put("JSUB",0x48);
		OPtoCODE.put("+JSUB",0x48);
		OPtoCODE.put("LDA",0x00);
		OPtoCODE.put("+LDA",0x00);
		OPtoCODE.put("LDB",0x68);
		OPtoCODE.put("+LDB",0x68);
		OPtoCODE.put("LDCH",0x50);
		OPtoCODE.put("+LDCH",0x50);
		OPtoCODE.put("LDF",0x70);
		OPtoCODE.put("+LDF",0x70);
		OPtoCODE.put("LDL",0x08);
		OPtoCODE.put("+LDL",0x08);
		OPtoCODE.put("LDS",0x6C);
		OPtoCODE.put("+LDS",0x6C);
		OPtoCODE.put("LDT",0x74);
		OPtoCODE.put("+LDT",0x74);
		OPtoCODE.put("LDX",0x04);
		OPtoCODE.put("+LDX",0x04);
		OPtoCODE.put("LPS",0xD0);
		OPtoCODE.put("+LPS",0xD0);
		OPtoCODE.put("MUL",0x20);
		OPtoCODE.put("+MUL",0x20);
		OPtoCODE.put("MULF",0x60);
		OPtoCODE.put("+MULF",0x60);
		OPtoCODE.put("MULR",0x98);
		OPtoCODE.put("NORM",0xC8);
		OPtoCODE.put("OR",0x44);
		OPtoCODE.put("+OR",0x44);
		OPtoCODE.put("RD",0xD8);
		OPtoCODE.put("+RD",0xD8);
		OPtoCODE.put("RMO",0xAC);
		OPtoCODE.put("RSUB",0x4C);
		OPtoCODE.put("+RSUB",0x4C);
		OPtoCODE.put("SHIFTL",0xA4);
		OPtoCODE.put("SHIFTR",0xA8);
		OPtoCODE.put("SIO",0xF0);
		OPtoCODE.put("SSK",0xEC);
		OPtoCODE.put("+SSK",0xEC);
		OPtoCODE.put("STA",0x0C);
		OPtoCODE.put("+STA",0x0C);
		OPtoCODE.put("STB",0x78);
		OPtoCODE.put("+STB",0x78);
		OPtoCODE.put("STCH",0x54);
		OPtoCODE.put("+STCH",0x54);
		OPtoCODE.put("STF",0x80);
		OPtoCODE.put("+STF",0x80);
		OPtoCODE.put("STI",0xD4);
		OPtoCODE.put("+STI",0xD4);
		OPtoCODE.put("STL",0x14);
		OPtoCODE.put("+STL",0x14);
		OPtoCODE.put("STS",0x7C);
		OPtoCODE.put("+STS",0x7C);
		OPtoCODE.put("STSW",0xE8);
		OPtoCODE.put("+STSW",0xE8);
		OPtoCODE.put("STT",0x84);
		OPtoCODE.put("+STT",0x84);
		OPtoCODE.put("STX",0x10);
		OPtoCODE.put("+STX",0x10);
		OPtoCODE.put("SUB",0x1C);
		OPtoCODE.put("+SUB",0x1C);
		OPtoCODE.put("SUBF",0x5C);
		OPtoCODE.put("+SUBF",0x5C);
		OPtoCODE.put("SUBR",0x94);
		OPtoCODE.put("SVC",0xB0);
		OPtoCODE.put("TD",0xE0);
		OPtoCODE.put("+TD",0xE0);
		OPtoCODE.put("TIO",0xF8);
		OPtoCODE.put("TIX",0x2C);
		OPtoCODE.put("+TIX",0x2C);
		OPtoCODE.put("TIXR",0xB8);
		OPtoCODE.put("WD",0xDC);
		OPtoCODE.put("+WD",0xDC);
		//test//need to be modified
		OPtoCODE.put("RESB",0x0);
		OPtoCODE.put("RESW",0x0);
		OPtoCODE.put("WORD",0x0);
		OPtoCODE.put("BYTE",0x0);
		//assembler directive//need to be modified
		OPtoCODE.put("START",0x0);
		OPtoCODE.put("END",0x0);
		OPtoCODE.put("BASE",0x0);
	}
	public static void generlizeFORMAT()
	{
		OPtoFORMAT.put("ADD",3);
		OPtoFORMAT.put("+ADD",4);
		OPtoFORMAT.put("ADDF",3);
		OPtoFORMAT.put("+ADDF",4);
		OPtoFORMAT.put("ADDR",2);
		OPtoFORMAT.put("AND",3);
		OPtoFORMAT.put("+AND",4);
		OPtoFORMAT.put("CLEAR",2);
		OPtoFORMAT.put("COMP",3);
		OPtoFORMAT.put("+COMP",4);
		OPtoFORMAT.put("COMPF",3);
		OPtoFORMAT.put("+COMPF",4);
		OPtoFORMAT.put("COMPR",2);
		OPtoFORMAT.put("DIV",3);
		OPtoFORMAT.put("+DIV",4);
		OPtoFORMAT.put("DIVF",3);
		OPtoFORMAT.put("+DIVF",4);
		OPtoFORMAT.put("DIVR",2);
		OPtoFORMAT.put("FIX",1);
		OPtoFORMAT.put("FLOAT",1);
		OPtoFORMAT.put("HIO",1);
		OPtoFORMAT.put("J",3);
		OPtoFORMAT.put("+J",4);
		OPtoFORMAT.put("JEQ",3);
		OPtoFORMAT.put("+JEQ",4);
		OPtoFORMAT.put("JGT",3);
		OPtoFORMAT.put("+JGT",4);
		OPtoFORMAT.put("JLT",3);
		OPtoFORMAT.put("+JLT",4);
		OPtoFORMAT.put("JSUB",3);
		OPtoFORMAT.put("+JSUB",4);
		OPtoFORMAT.put("LDA",3);
		OPtoFORMAT.put("+LDA",4);
		OPtoFORMAT.put("LDB",3);
		OPtoFORMAT.put("+LDB",4);
		OPtoFORMAT.put("LDCH",3);
		OPtoFORMAT.put("+LDCH",4);
		OPtoFORMAT.put("LDF",3);
		OPtoFORMAT.put("+LDF",4);
		OPtoFORMAT.put("LDL",3);
		OPtoFORMAT.put("+LDL",4);
		OPtoFORMAT.put("LDS",3);
		OPtoFORMAT.put("+LDS",4);
		OPtoFORMAT.put("LDT",3);
		OPtoFORMAT.put("+LDT",4);
		OPtoFORMAT.put("LDX",3);
		OPtoFORMAT.put("+LDX",4);
		OPtoFORMAT.put("LPS",3);
		OPtoFORMAT.put("+LPS",4);
		OPtoFORMAT.put("MUL",3);
		OPtoFORMAT.put("+MUL",4);
		OPtoFORMAT.put("MULF",3);
		OPtoFORMAT.put("+MULF",4);
		OPtoFORMAT.put("MULR",2);
		OPtoFORMAT.put("NORM",1);
		OPtoFORMAT.put("OR",3);
		OPtoFORMAT.put("+OR",4);
		OPtoFORMAT.put("RD",3);
		OPtoFORMAT.put("+RD",4);
		OPtoFORMAT.put("RMO",2);
		OPtoFORMAT.put("RSUB",3);
		OPtoFORMAT.put("+RSUB",4);
		OPtoFORMAT.put("SHIFTL",2);
		OPtoFORMAT.put("SHIFTR",2);
		OPtoFORMAT.put("SIO",1);
		OPtoFORMAT.put("SSK",3);
		OPtoFORMAT.put("+SSK",4);
		OPtoFORMAT.put("STA",3);
		OPtoFORMAT.put("+STA",4);
		OPtoFORMAT.put("STB",3);
		OPtoFORMAT.put("+STB",4);
		OPtoFORMAT.put("STCH",3);
		OPtoFORMAT.put("+STCH",4);
		OPtoFORMAT.put("STF",3);
		OPtoFORMAT.put("+STF",4);
		OPtoFORMAT.put("STI",3);
		OPtoFORMAT.put("+STI",4);
		OPtoFORMAT.put("STL",3);
		OPtoFORMAT.put("+STL",4);
		OPtoFORMAT.put("STS",3);
		OPtoFORMAT.put("+STS",4);
		OPtoFORMAT.put("STSW",3);
		OPtoFORMAT.put("+STSW",4);
		OPtoFORMAT.put("STT",3);
		OPtoFORMAT.put("+STT",4);
		OPtoFORMAT.put("STX",3);
		OPtoFORMAT.put("+STX",4);
		OPtoFORMAT.put("SUB",3);
		OPtoFORMAT.put("+SUB",4);
		OPtoFORMAT.put("SUBF",3);
		OPtoFORMAT.put("+SUBF",4);
		OPtoFORMAT.put("SUBR",2);
		OPtoFORMAT.put("SVC",2);
		OPtoFORMAT.put("TD",3);
		OPtoFORMAT.put("+TD",4);
		OPtoFORMAT.put("TIO",1);
		OPtoFORMAT.put("TIX",3);
		OPtoFORMAT.put("+TIX",4);
		OPtoFORMAT.put("TIXR",2);
		OPtoFORMAT.put("WD",3);
		OPtoFORMAT.put("+WD",4);
		//test//need to be modified
		OPtoFORMAT.put("RESB",0);
		OPtoFORMAT.put("RESW",0);
		OPtoFORMAT.put("WORD",0);
		OPtoFORMAT.put("BYTE",0);
		//assembler directive//need to be modified
		OPtoFORMAT.put("START",0);
		OPtoFORMAT.put("END",0);
		OPtoFORMAT.put("BASE",0);
	}
	public static int getCODE(String key)
	{
		return OPtoCODE.get(key);
	}
	public static int getFORMAT(String key)
	{
		return OPtoFORMAT.get(key);
	}
}
